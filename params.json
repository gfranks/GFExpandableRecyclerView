{"name":"Gfexpandablerecyclerview","tagline":"GFExpandableRecyclerView was inspired by ExpandableListAdapter to assist in creating a similar experience with RecyclerView","body":"GFExpandableRecyclerView\r\n===========\r\n\r\nGFExpandableRecyclerView was inspired by ExpandableListAdapter to assist in creating a similar experience with RecyclerView\r\n\r\nIncluded in this library is a DividerItemDecoration to handle VERTICAL and HORIZONTAL dividers in your RecyclerViews.\r\n```java\r\n// Use custom divider\r\nrecyclerView.addItemDecoration(new DividerItemDecoration(drawable, orientation);\r\n// or\r\nrecyclerView.addItemDecoration(new DividerItemDecoration(context, R.drawable.your_divider, orientation);\r\n```\r\n```java\r\n// Use internal divider specified in your styles, android:listDivider\r\nrecyclerView.addItemDecoration(new DividerItemDecoration(context, orientation);\r\n```\r\n\r\n#### Basic Example\r\n```java\r\npublic class GroupItem {\r\n\r\n    List<ChildItem> mChildren;\r\n    public List<ChildItem> getChildren() {\r\n        return mChildren;\r\n    }\r\n    ...\r\n}\r\n```\r\n```java\r\npublic class ChildItem {\r\n    ...\r\n}\r\n```\r\n```java\r\npublic class GroupViewHolder extends RecyclerView.ViewHolder {\r\n\r\n    public GroupViewHolder(View v) {\r\n        super(v);\r\n        ...\r\n    }\r\n}\r\n```\r\n```java\r\npublic class ChildViewHolder extends RecyclerView.ViewHolder {\r\n\r\n    public ChildViewHolder(View v) {\r\n        super(v);\r\n        ...\r\n    }\r\n}\r\n```\r\n```java\r\npublic class SimpleExpandableAdapter extends GFExpandableRecyclerViewAdapter<GroupItem, ChildItem, GroupViewHolder, ChildViewHolder> {\r\n\r\n    private List<GroupItem> mGroupItems;\r\n\r\n    public SimpleExpandableAdapter(List<GroupItem> groupItems) {\r\n        mGroupItems = groupItems;\r\n    }\r\n\r\n    @Override\r\n    public List<GroupItem> getGroupItems() {\r\n        return mGroupItems;\r\n    }\r\n\r\n    @Override\r\n    public int getGroupCount() {\r\n        return mGroupItems.size();\r\n    }\r\n\r\n    @Override\r\n    public int getChildCount(int groupPosition) {\r\n        return mGroupItems.get(groupPosition).getChildren().size();\r\n    }\r\n\r\n    @Override\r\n    public GroupItem getGroupItem(int groupPosition) {\r\n        return mGroupItems.get(groupPosition);\r\n    }\r\n\r\n    @Override\r\n    public ChildItem getChildItem(int groupPosition,\r\n                                  int childPosition) {\r\n        return mGroupItems.get(groupPosition).getChildren().get(childPosition);\r\n    }\r\n\r\n    @Override\r\n    public boolean isGroupInitiallyExpanded(int groupPosition) {\r\n        return false;\r\n    }\r\n\r\n    @Override\r\n    public GroupViewHolder onCreateGroupViewHolder(ViewGroup parent,\r\n                                                   int viewType) {\r\n        return new GroupViewHolder(LayoutInflater.from(parent.getContext()).inflate(R.layout.group_item, parent, false));\r\n    }\r\n\r\n    @Override\r\n    public ChildViewHolder onCreateChildViewHolder(ViewGroup parent,\r\n                                                   int viewType) {\r\n        return new ChildViewHolder(LayoutInflater.from(parent.getContext()).inflate(R.layout.child_item, parent, false));\r\n    }\r\n\r\n    @Override\r\n    public void onBindGroupViewHolder(GroupViewHolder holder,\r\n                                      int groupPosition,\r\n                                      GroupItem groupItem,\r\n                                      boolean isExpanded) {\r\n        // set group values\r\n    }\r\n\r\n    @Override\r\n    public void onBindChildViewHolder(ChildViewHolder holder,\r\n                                      int groupPosition,\r\n                                      int childPosition,\r\n                                      ChildItem verticalChildItem) {\r\n        // set child values\r\n    }\r\n}\r\n```\r\n\r\nItem Animators:\r\n----------------\r\n\r\nA BaseItemAnimator class is included to assist in item animation. By default, a FadeInItemAnimator will be used, however,\r\nyou may create your own animator by extending the BaseItemAnimator, and implementing your own animations. See FadeInItemAnimator\r\nfor an example of this or please refer to https://github.com/wasabeef/recyclerview-animators to see examples as this was taken from\r\nthis example.\r\n\r\n```java\r\npublic class SampleItemAnimator extends BaseItemAnimator {\r\n\r\n    public FadeInItemAnimator() {\r\n    }\r\n\r\n    public FadeInItemAnimator(Interpolator interpolator) {\r\n        mInterpolator = interpolator;\r\n    }\r\n\r\n    @Override\r\n    protected void preAnimateRemoveImpl(RecyclerView.ViewHolder holder) {\r\n        // do pre remove animation\r\n    }\r\n\r\n    @Override\r\n    protected void preAnimateAddImpl(RecyclerView.ViewHolder holder) {\r\n        // do pre add animation\r\n    }\r\n\r\n    @Override\r\n    protected void animateRemoveImpl(final RecyclerView.ViewHolder holder) {\r\n        // do remove animation\r\n    }\r\n\r\n    @Override\r\n    protected void animateAddImpl(final RecyclerView.ViewHolder holder) {\r\n        // do add animation\r\n    }\r\n}\r\n```\r\n```java\r\nrecyclerView.setItemAnimator(new SampleItemAnimator());\r\n// or\r\nrecyclerView.setItemAnimator(new SampleItemAnimator(new Interpolator(1f)));\r\n```\r\n\r\nCallback Methods:\r\n----------------\r\n```java\r\n/**\r\n * OnGroupExpandCollapseListener\r\n */\r\nboolean isGroupExpandable(int groupPosition); // tell adapter if this group should be initially expanded\r\nvoid onGroupExpand(int groupPosition); // callback when a group is expanded\r\nvoid onGroupCollapse(int groupPosition); // callback when a group is collapsed\r\n\r\n/**\r\n * OnGroupClickListener, Callback when group item is clicked\r\n */\r\nvoid onGroupClick(GFExpandableRecyclerViewAdapter adapter,\r\n                  View v,\r\n                  int groupPosition);\r\n\r\n/**\r\n * OnChildClickListener, Callback when child item is clicked\r\n */\r\nvoid onChildClick(GFExpandableRecyclerViewAdapter adapter,\r\n                  View v,\r\n                  int groupPosition,\r\n                  int childPosition);\r\n```\r\n\r\nInstallation:\r\n------------\r\n\r\n### Directly include source into your projects\r\n\r\n- Simply copy the source/resource files from the library folder into your project.\r\n\r\n### Use binary approach\r\n\r\n- Follow these steps to include aar binary in your project:\r\n\r\n    1: Copy com.github.gfranks.expandablerecyclerview-1.0.aar into your projects libs/ directory.\r\n\r\n    2: Include the following either in your top level build.gradle file or your module specific one:\r\n    ```\r\n      repositories {\r\n         flatDir {\r\n             dirs 'libs'\r\n         }\r\n     }\r\n    ```\r\n    3: Under your dependencies for your main module's build.gradle file, you can reference that aar file like so:\r\n    ```compile 'com.github.gfranks.expandablerecyclerview:com.github.gfranks.expandablerecyclerview-1.0@aar'```\r\n\r\nLicense\r\n-------\r\nCopyright (c) 2015 Garrett Franks. All rights reserved.\r\n\r\nPermission is hereby granted, free of charge, to any person obtaining a copy\r\nof this software and associated documentation files (the \"Software\"), to deal\r\nin the Software without restriction, including without limitation the rights\r\nto use, copy, modify, merge, publish, distribute, sublicense, and/or sell\r\ncopies of the Software, and to permit persons to whom the Software is\r\nfurnished to do so, subject to the following conditions:\r\n\r\nThe above copyright notice and this permission notice shall be included in\r\nall copies or substantial portions of the Software.\r\n\r\nTHE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR\r\nIMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,\r\nFITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE\r\nAUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER\r\nLIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,\r\nOUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE\r\nSOFTWARE.","google":"UA-73397886-1","note":"Don't delete this file! It's used internally to help with page regeneration."}